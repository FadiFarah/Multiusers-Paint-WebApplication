@page "/room/{Id}"@using Blazor.Extensions;@using Blazor.Extensions.Canvas@using Blazor.Extensions.Canvas.Canvas2D;@inject IJSRuntime JsRuntime<div class="canvas-div">    <BECanvas Width="@((Width))" Height="@(Height-((Height/4)))" @ref="_canvasReference"></BECanvas></div><div class="d-flex justify-content-around paint-tool-box" style="background-color:white;width:@(Width+"px"); height:@((Height/4)+"px")">    <div>        <input id="undo" class="paint-tool" type="image" src="http://simpleicon.com/wp-content/uploads/undo-6.png" />    </div>    <div>        <input id="redo" class="paint-tool" type="image" src="http://simpleicon.com/wp-content/uploads/redo-6.png" />    </div>    <div>        <input id="clear" class="paint-tool" type="image" src="https://icons-for-free.com/iconfiles/png/512/trash+bin+icon-1320086460670911435.png">    </div>    <div>        <input id="eraser" class="paint-tool" type="image" src="https://cdn0.iconfinder.com/data/icons/outline-icons/320/Eraser-512.png">    </div>    <div class="input-color-container">        <input class="paint-tool" id="color" type="color">    </div>    <div>        <input class="paint-tool styled-slider slider-progress" id="size" type="range" min="1" max="100" value="2">    </div></div>@code { [Parameter]    public string Id { get; set; }    public int Height { get; set; }    public int Width { get; set; }    public ElementReference ToolBox;    private Canvas2DContext _context;    protected BECanvasComponent _canvasReference;    protected override async Task OnInitializedAsync()    {        var dimension = await JsRuntime.InvokeAsync<WindowDimension>("getWindowDimensions");        Height = dimension.Height;        Width = dimension.Width;    }    protected override async Task OnAfterRenderAsync(bool firstRender)    {        this._context = await this._canvasReference.CreateCanvas2DAsync();        await this._context.SetFillStyleAsync("red");        await this._context.FillRectAsync(10, 100, 100, 100);        await this._context.SetFontAsync("38px Calibri");        await this._context.StrokeTextAsync("Hello Blazor!!!", 5, 100);    }    public class WindowDimension    {        public int Width { get; set; }        public int Height { get; set; }    }}